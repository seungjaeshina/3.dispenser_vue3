import { type PropType } from 'vue';
import type { Result } from '@zxing/library';
declare function onReset(state?: boolean): void;
declare function onCanPlay(): void;
declare function onCanStop(state?: boolean): void;
declare function onChangeFacemode(): void;
declare const _default: __VLS_WithTemplateSlots<import("vue").DefineComponent<{
    showOnStream: {
        type: BooleanConstructor;
        default: boolean;
    };
    capture: {
        type: PropType<"stream" | "shoot">;
        default: string;
    };
}, {
    onCanPlay: typeof onCanPlay;
    onCanStop: typeof onCanStop;
    onReset: typeof onReset;
    onChangeFacemode: typeof onChangeFacemode;
}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, {
    onloading: (value: boolean) => void;
    loaded: (value: Event) => void;
    result: (value: Result | undefined) => void;
}, string, import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    showOnStream: {
        type: BooleanConstructor;
        default: boolean;
    };
    capture: {
        type: PropType<"stream" | "shoot">;
        default: string;
    };
}>> & {
    onOnloading?: ((value: boolean) => any) | undefined;
    onLoaded?: ((value: Event) => any) | undefined;
    onResult?: ((value: Result | undefined) => any) | undefined;
}, {
    showOnStream: boolean;
    capture: "stream" | "shoot";
}, {}>, {
    "action-stop"?(_: {
        onCanStop: typeof onCanStop;
    }): any;
    "action-facemode"?(_: {
        onChangeFacemode: typeof onChangeFacemode;
    }): any;
    actions?(_: {
        onCanPlay: typeof onCanPlay;
        isReset: boolean;
        onReset: typeof onReset;
    }): any;
}>;
export default _default;
type __VLS_WithTemplateSlots<T, S> = T & {
    new (): {
        $slots: S;
    };
};
