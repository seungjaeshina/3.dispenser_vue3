{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport '@/assets/css/input/reginoscan.css';\nimport axios from 'axios';\n//import { SerialPort } from 'serialport';\n\n//import dayjs from \"dayjs\"\n//const nowDay_json = \"@/assets/json/\" + dayjs().format('YYYY-MM-DD') + \".json\";\n//import json_day_log from nowDay_json;\n\nexport default {\n  name: \"RegiNoScan\",\n  data() {\n    return {\n      log_data: {},\n      regi_data: {},\n      regiNo: ''\n    };\n  },\n  methods: {\n    goBack() {\n      this.$router.go(-1);\n    },\n    goHome() {\n      this.$router.push('/');\n    },\n    onDecode(result) {\n      this.qrCodeData = result;\n    },\n    checkQR() {\n      axios({\n        method: 'get',\n        url: 'http://localhost:5193/api/scanQR',\n        timeout: 30000,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: {}\n      }).then(function (response) {\n        if (response.status === 200) {\n          const responseBody = response.data;\n          console.log(responseBody);\n          console.log(\"qrCode :\" + responseBody.qrCode);\n          this.regiNo = responseBody.qrCode;\n        } else {\n          console.error('error:', response.statusText);\n        }\n      }).catch(function (error) {\n        console.error('error:', error);\n      });\n    },\n    goSelectBox() {\n      // 로그처리\n      this.log_data.postNo = '1111101';\n      this.log_data.boxNo = '';\n      this.log_data.userId = '';\n      this.log_data.menuName = '[메뉴]등기번호스캔';\n      this.log_data.actionData = '등기번호 스캔:' + this.regiNo;\n      axios.post(\"http://localhost:8910/admin/dispenserlog/create\", this.log_data, {\n        header: {\n          \"Context-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        // 성공했을 경우\n        console.log(\"성공\", res);\n      }).catch(res => {\n        // 실패했을 경우\n        console.error(\"실패 \", res);\n      });\n\n      // 등기번호 인증\n      this.regi_data.regiNo = '1111101';\n      axios.get(\"http://localhost:8910/admin/dispenser/checkregino\", this.regi_data, {\n        header: {\n          \"Context-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        // 성공했을 경우\n        console.log(\"성공\", res);\n        console.log(\"성공\", res.data.errno);\n        if (res.data.errno == -1) {\n          console.log(res.data.errmsg, this.request2_data.userId);\n          this.$router.push('/selectbox');\n        } else {\n          this.$router.push('/selectbox');\n        }\n      }).catch(res => {\n        // 실패했을 경우\n        console.error(\"실패 \", res);\n      });\n      this.$router.push('/selectbox');\n    }\n  },\n  created() {},\n  mounted() {}\n};","map":{"version":3,"names":["axios","name","data","log_data","regi_data","regiNo","methods","goBack","$router","go","goHome","push","onDecode","result","qrCodeData","checkQR","method","url","timeout","headers","then","response","status","responseBody","console","log","qrCode","error","statusText","catch","goSelectBox","postNo","boxNo","userId","menuName","actionData","post","header","res","get","errno","errmsg","request2_data","created","mounted"],"sources":["D:\\0610\\1020_KoreaPost\\2.Dispenser\\02.Source\\3.dispenser_vue3\\src\\views\\input\\RegiNoScan.vue"],"sourcesContent":["<template>\n      <div>\n        <div class=\"wrap\">\n\n            <!-- ======== 카테고리 헤더 ======== -->\n            <div class=\"header\">\n                <div class=\"main_logo\" v-on:click=\"goHome\"></div>\n                <div class=\"header_title\">\n                    <div class=\"header_title_down\">등기번호 스캔</div>    \n                </div>\n                <div class=\"back\"  v-on:click=\"goBack\"></div>    \n            </div>\n\n            <!-- ======== 내용 ======== -->\n            <div class=\"reginoscan_container\">\n                <div class=\"reginoscan_area\" v-on:click=\"goSelectBox\">\n                </div>\n\n                <div class=\"reginoscan_ment\">\n                </div>\n            </div><!--container끝-->\n            <div class=\"reginoscan_tail\" v-on:click=\"goSelectBox\">\n            </div>\n        </div><!--wrap 끝-->\n\n    </div>\n</template>\n<script>\nimport '@/assets/css/input/reginoscan.css';\nimport axios from 'axios';\n//import { SerialPort } from 'serialport';\n\n//import dayjs from \"dayjs\"\n//const nowDay_json = \"@/assets/json/\" + dayjs().format('YYYY-MM-DD') + \".json\";\n//import json_day_log from nowDay_json;\n\nexport default {\n    name: \"RegiNoScan\",\n    data() {\n        return {\n            log_data :{},\n            regi_data :{},\n            regiNo:'',\n        };\n    },\n    methods: {\n        goBack(){\n            this.$router.go(-1);\n        },\n        goHome(){\n            this.$router.push('/');\n        },\n        onDecode (result) {\n            this.qrCodeData = result;\n        },\n        checkQR(){\n            axios({\n                method: 'get',\n                url: 'http://localhost:5193/api/scanQR',\n                timeout : 30000, \n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                data: {}\n            })\n            .then(function(response) {\n                if (response.status === 200) {\n                    const responseBody = response.data;\n                    console.log(responseBody);\n                    console.log(\"qrCode :\"+responseBody.qrCode);\n                    this.regiNo = responseBody.qrCode;\n                } else {\n                    console.error('error:', response.statusText);\n                }\n            })\n            .catch(function(error) {\n                console.error('error:', error);\n            });\n        },\n        goSelectBox(){\n        \n            // 로그처리\n            this.log_data.postNo = '1111101';\n            this.log_data.boxNo = '';\n            this.log_data.userId = '';\n            this.log_data.menuName = '[메뉴]등기번호스캔';\n            this.log_data.actionData = '등기번호 스캔:'+this.regiNo;\n            axios.post(\"http://localhost:8910/admin/dispenserlog/create\", this.log_data, {\n                header: {\n                    \"Context-Type\": \"multipart/form-data\",\n                },\n            })\n            .then((res) => { // 성공했을 경우\n                console.log(\"성공\", res);\n\n            })\n            .catch((res) => { // 실패했을 경우\n                console.error(\"실패 \", res);\n            });\n\n            // 등기번호 인증\n            this.regi_data.regiNo = '1111101';\n            axios.get(\"http://localhost:8910/admin/dispenser/checkregino\", this.regi_data, {\n                header: {\n                    \"Context-Type\": \"multipart/form-data\",\n                },\n            })\n            .then((res) => { // 성공했을 경우\n                console.log(\"성공\", res);\n                console.log(\"성공\", res.data.errno);\n\n                if (res.data.errno == -1) {\n                    console.log(res.data.errmsg, this.request2_data.userId);\n                    this.$router.push('/selectbox');\n                } else {                \n                    this.$router.push('/selectbox');\n                }\n\n            })\n            .catch((res) => { // 실패했을 경우\n                console.error(\"실패 \", res);\n            });\n            \n            this.$router.push('/selectbox');\n        }     \n    },\n    created() {\n    },\n    mounted() {\n    }\n\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}