{"ast":null,"code":"import { loginByUsername, logout, getUserInfo } from '@/api/login';\nimport { getToken, setToken, removeToken } from '@/utils/auth';\nconst user = {\n  state: {\n    user: '',\n    status: '',\n    code: '',\n    token: getToken(),\n    name: '',\n    avatar: '',\n    introduction: '',\n    roles: [],\n    perms: [],\n    setting: {\n      articlePlatform: []\n    }\n  },\n  mutations: {\n    SET_CODE: (state, code) => {\n      state.code = code;\n    },\n    SET_TOKEN: (state, token) => {\n      state.token = token;\n    },\n    SET_INTRODUCTION: (state, introduction) => {\n      state.introduction = introduction;\n    },\n    SET_SETTING: (state, setting) => {\n      state.setting = setting;\n    },\n    SET_STATUS: (state, status) => {\n      state.status = status;\n    },\n    SET_NAME: (state, name) => {\n      state.name = name;\n    },\n    SET_AVATAR: (state, avatar) => {\n      state.avatar = avatar;\n    },\n    SET_ROLES: (state, roles) => {\n      state.roles = roles;\n    },\n    SET_PERMS: (state, perms) => {\n      state.perms = perms;\n    }\n  },\n  actions: {\n    // 회원명로그인\n    LoginByUsername({\n      commit\n    }, userInfo) {\n      const username = userInfo.username.trim();\n      return new Promise((resolve, reject) => {\n        loginByUsername(username, userInfo.password).then(response => {\n          const token = response.data.data;\n          commit('SET_TOKEN', token);\n          setToken(token);\n          resolve();\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    GetUserInfo({\n      commit,\n      state\n    }) {\n      return new Promise((resolve, reject) => {\n        getUserInfo(state.token).then(response => {\n          const data = response.data.data;\n          if (data.perms && data.perms.length > 0) {\n            // 验证返回的perms是否是一个非空数组\n            commit('SET_PERMS', data.perms);\n          } else {\n            reject('getInfo: perms must be a non-null array !');\n          }\n          commit('SET_ROLES', data.roles);\n          commit('SET_NAME', data.name);\n          commit('SET_AVATAR', data.avatar);\n          commit('SET_INTRODUCTION', data.introduction);\n          resolve(response);\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    // 第三方验证로그인\n    // LoginByThirdparty({ commit, state }, code) {\n    //   return new Promise((resolve, reject) => {\n    //     commit('SET_CODE', code)\n    //     loginByThirdparty(state.status, state.email, state.code).then(response => {\n    //       commit('SET_TOKEN', response.data.token)\n    //       setToken(response.data.token)\n    //       resolve()\n    //     }).catch(error => {\n    //       reject(error)\n    //     })\n    //   })\n    // },\n\n    LogOut({\n      commit,\n      state\n    }) {\n      return new Promise((resolve, reject) => {\n        logout(state.token).then(() => {\n          commit('SET_TOKEN', '');\n          commit('SET_ROLES', []);\n          commit('SET_PERMS', []);\n          removeToken();\n          resolve();\n        }).catch(error => {\n          reject(error);\n        });\n      });\n    },\n    FedLogOut({\n      commit\n    }) {\n      return new Promise(resolve => {\n        commit('SET_TOKEN', '');\n        removeToken();\n        resolve();\n      });\n    },\n    ChangeRoles({\n      commit,\n      dispatch\n    }, role) {\n      return new Promise(resolve => {\n        commit('SET_TOKEN', role);\n        setToken(role);\n        getUserInfo(role).then(response => {\n          const data = response.data;\n          commit('SET_ROLES', data.roles);\n          commit('SET_PERMS', data.perms);\n          commit('SET_NAME', data.name);\n          commit('SET_AVATAR', data.avatar);\n          commit('SET_INTRODUCTION', data.introduction);\n          dispatch('GenerateRoutes', data); // 动态修改权限后 重绘侧边菜单\n          resolve();\n        });\n      });\n    }\n  }\n};\nexport default user;","map":{"version":3,"names":["loginByUsername","logout","getUserInfo","getToken","setToken","removeToken","user","state","status","code","token","name","avatar","introduction","roles","perms","setting","articlePlatform","mutations","SET_CODE","SET_TOKEN","SET_INTRODUCTION","SET_SETTING","SET_STATUS","SET_NAME","SET_AVATAR","SET_ROLES","SET_PERMS","actions","LoginByUsername","commit","userInfo","username","trim","Promise","resolve","reject","password","then","response","data","catch","error","GetUserInfo","length","LogOut","FedLogOut","ChangeRoles","dispatch","role"],"sources":["F:/solution/solution/KoreaPost/koreapost/3.dispenser_vue3/src/store/modules/user.js"],"sourcesContent":["import { loginByUsername, logout, getUserInfo } from '@/api/login'\nimport { getToken, setToken, removeToken } from '@/utils/auth'\n\nconst user = {\n  state: {\n    user: '',\n    status: '',\n    code: '',\n    token: getToken(),\n    name: '',\n    avatar: '',\n    introduction: '',\n    roles: [],\n    perms: [],\n    setting: {\n      articlePlatform: []\n    }\n  },\n\n  mutations: {\n    SET_CODE: (state, code) => {\n      state.code = code\n    },\n    SET_TOKEN: (state, token) => {\n      state.token = token\n    },\n    SET_INTRODUCTION: (state, introduction) => {\n      state.introduction = introduction\n    },\n    SET_SETTING: (state, setting) => {\n      state.setting = setting\n    },\n    SET_STATUS: (state, status) => {\n      state.status = status\n    },\n    SET_NAME: (state, name) => {\n      state.name = name\n    },\n    SET_AVATAR: (state, avatar) => {\n      state.avatar = avatar\n    },\n    SET_ROLES: (state, roles) => {\n      state.roles = roles\n    },\n    SET_PERMS: (state, perms) => {\n      state.perms = perms\n    }\n  },\n\n  actions: {\n    // 회원명로그인\n    LoginByUsername({ commit }, userInfo) {\n      const username = userInfo.username.trim()\n      return new Promise((resolve, reject) => {\n        loginByUsername(username, userInfo.password).then(response => {\n          const token = response.data.data\n          commit('SET_TOKEN', token)\n          setToken(token)\n          resolve()\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n\n    GetUserInfo({ commit, state }) {\n      return new Promise((resolve, reject) => {\n        getUserInfo(state.token).then(response => {\n          const data = response.data.data\n\n          if (data.perms && data.perms.length > 0) { // 验证返回的perms是否是一个非空数组\n            commit('SET_PERMS', data.perms)\n          } else {\n            reject('getInfo: perms must be a non-null array !')\n          }\n\n          commit('SET_ROLES', data.roles)\n          commit('SET_NAME', data.name)\n          commit('SET_AVATAR', data.avatar)\n          commit('SET_INTRODUCTION', data.introduction)\n          resolve(response)\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n\n    // 第三方验证로그인\n    // LoginByThirdparty({ commit, state }, code) {\n    //   return new Promise((resolve, reject) => {\n    //     commit('SET_CODE', code)\n    //     loginByThirdparty(state.status, state.email, state.code).then(response => {\n    //       commit('SET_TOKEN', response.data.token)\n    //       setToken(response.data.token)\n    //       resolve()\n    //     }).catch(error => {\n    //       reject(error)\n    //     })\n    //   })\n    // },\n\n    LogOut({ commit, state }) {\n      return new Promise((resolve, reject) => {\n        logout(state.token).then(() => {\n          commit('SET_TOKEN', '')\n          commit('SET_ROLES', [])\n          commit('SET_PERMS', [])\n          removeToken()\n          resolve()\n        }).catch(error => {\n          reject(error)\n        })\n      })\n    },\n\n    FedLogOut({ commit }) {\n      return new Promise(resolve => {\n        commit('SET_TOKEN', '')\n        removeToken()\n        resolve()\n      })\n    },\n\n    ChangeRoles({ commit, dispatch }, role) {\n      return new Promise(resolve => {\n        commit('SET_TOKEN', role)\n        setToken(role)\n        getUserInfo(role).then(response => {\n          const data = response.data\n          commit('SET_ROLES', data.roles)\n          commit('SET_PERMS', data.perms)\n          commit('SET_NAME', data.name)\n          commit('SET_AVATAR', data.avatar)\n          commit('SET_INTRODUCTION', data.introduction)\n          dispatch('GenerateRoutes', data) // 动态修改权限后 重绘侧边菜单\n          resolve()\n        })\n      })\n    }\n  }\n}\n\nexport default user\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}