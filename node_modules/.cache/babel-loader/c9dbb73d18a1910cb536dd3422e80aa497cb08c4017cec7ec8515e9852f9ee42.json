{"ast":null,"code":"import { resolveComponent as _resolveComponent, openBlock as _openBlock, createBlock as _createBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_view = _resolveComponent(\"router-view\");\n  return _openBlock(), _createBlock(_component_router_view);\n}","map":{"version":3,"names":["_createBlock","_component_router_view"],"sources":["D:\\0610\\1020_KoreaPost\\2.Dispenser\\02.Source\\dispenser_vue3\\src\\App.vue"],"sourcesContent":["<template>\n  <router-view/>\n</template>\n\n<script>\nimport { getCurrentInstance, onMounted, reactive } from \"@vue/runtime-core\";\n\nexport default {\n  name: \"App\",\n  setup() {\n    const app = getCurrentInstance();\n    const $socket = app.appContext.config.globalProperties.$socket;\n\n    const state = reactive({\n      message: \"\",\n      textarea: \"\",\n    });\n\n    function chatSubmit() {\n      $socket.emit(\"chat\", {\n        message: state.message,\n      });\n      state.message = \"\";\n    }\n\n    onMounted(() => {\n      $socket.on(\"chat\", (data) => {\n        state.textarea += data.message + \"\\n\";\n      });\n    });\n\n    return {\n      state,\n      chatSubmit,\n    };\n  },\n};\n</script>\n\n<style>\n</style>\n"],"mappings":";;;uBACEA,YAAA,CAAcC,sBAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}