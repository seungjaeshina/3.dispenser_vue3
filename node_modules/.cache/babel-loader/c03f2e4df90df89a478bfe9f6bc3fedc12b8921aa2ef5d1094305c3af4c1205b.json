{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"wrap\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header_title\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header_title_down\"\n}, \"보관함 선택\")], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"selectbox_container\"\n};\nconst _hoisted_5 = {\n  class: \"modal-content\"\n};\nconst _hoisted_6 = {\n  ref: \"msg\"\n};\nconst _hoisted_7 = {\n  class: \"selectbox_bottom\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"selectbox_ment\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" ======== 카테고리 헤더 ======== \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"main_logo\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goHome && $options.goHome(...args))\n  }), _hoisted_3, _createElementVNode(\"div\", {\n    class: \"back\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goBack && $options.goBack(...args))\n  })]), _createCommentVNode(\" ======== 내용 ======== \"), _createElementVNode(\"div\", _hoisted_4, [_createCommentVNode(\" ======== 모달창 ======== \"), _createElementVNode(\"div\", {\n    class: _normalizeClass([\"modal\", {\n      'modal-on': _ctx.isModal\n    }]),\n    id: \"modal_selectbox\",\n    ref: \"modal_selectbox\"\n  }, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"h1\", _hoisted_6, \"이미 사용중인 함입니다.\", 512 /* NEED_PATCH */), _createElementVNode(\"button\", {\n    onClick: _cache[2] || (_cache[2] = (...args) => $options.modalClose && $options.modalClose(...args))\n  }, \"확인\")])], 2 /* CLASS */)]), _createCommentVNode(\"container끝\"), _createElementVNode(\"div\", _hoisted_7, [_hoisted_8, _createElementVNode(\"div\", {\n    class: \"selectbox_rescan blink\",\n    id: \"selectbox_auto\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.goAutoSelect && $options.goAutoSelect(...args))\n  }), _createElementVNode(\"div\", {\n    class: \"selectbox_done\",\n    onClick: _cache[4] || (_cache[4] = (...args) => $options.goDone && $options.goDone(...args))\n  })])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","onClick","_cache","args","$options","goHome","_hoisted_3","goBack","_hoisted_4","_normalizeClass","_ctx","isModal","id","_hoisted_5","_hoisted_6","modalClose","_hoisted_7","_hoisted_8","goAutoSelect","goDone"],"sources":["D:\\0610\\1020_KoreaPost\\2.Dispenser\\02.Source\\3.dispenser_vue3\\src\\views\\input\\SelectBox.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"wrap\">\n\n            <!-- ======== 카테고리 헤더 ======== -->\n            <div class=\"header\">\n                <div class=\"main_logo\" v-on:click=\"goHome\"></div>\n                <div class=\"header_title\">\n                    <div class=\"header_title_down\">보관함 선택</div>    \n                </div>\n                <div class=\"back\"  v-on:click=\"goBack\"></div>    \n            </div>\n\n            <!-- ======== 내용 ======== -->\n            <div class=\"selectbox_container\">\n\n                <!-- ======== 모달창 ======== -->\n                <div class=\"modal\" id=\"modal_selectbox\" ref=\"modal_selectbox\" v-bind:class=\"{ 'modal-on': isModal }\">\n                    <div class=\"modal-content\">\n                        <h1 ref=\"msg\">이미 사용중인 함입니다.</h1>\n                        <button v-on:click=\"modalClose\">확인</button>\n                    </div>\n                </div>\n\n            </div><!--container끝-->\n\n            <div class=\"selectbox_bottom\">\n                <div class=\"selectbox_ment\">\n                </div>\n                <div class=\"selectbox_rescan blink\" id=\"selectbox_auto\"  v-on:click=\"goAutoSelect\">\n                </div>\n                <div class=\"selectbox_done\" v-on:click=\"goDone\">\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport '@/assets/css/input/selectbox.css';\nimport '@/assets/css/modal.css';\n\n//import 'vue-inner-image-zoom/lib/vue-inner-image-zoom.css';\n//import InnerImageZoom from 'vue-inner-image-zoom';\n\nimport axios from 'axios';\n\n//import dayjs from \"dayjs\"\n//const nowDay_json = \"@/assets/json/\" + dayjs().format('YYYY-MM-DD') + \".json\";\n//import json_day_log from nowDay_json;\n\nexport default {\n    name: \"SelectBox\",\n    data() {\n        return {\n            autoselect: \"0\",\n            boxNo:'',\n            regiNo:'',\n            veriNo:'',\n            box_data :{},\n            log1_data :{postNo:'1111101',boxNo:'01',menuName:'새등기번호스캔',actionData:'메뉴재선택'},\n            log2_data :{postNo:'1111101',boxNo:'01',menuName:'등기투입후종료',actionData:'메뉴재선택'},\n            log3_data :{postNo:'1111101',boxNo:'01',menuName:'등기투입',actionData:'등기함선택'},\n            boxData:{},\n            boxStatus:{},\n        };\n    },\n    components: {\n  //      'inner-image-zoom': InnerImageZoom\n     },\n    methods: {\n        goBack(){\n            this.$router.go(-1);\n        },\n        goHome(){\n            this.$router.push('/');\n        },\n        goClick(boxNo){\n            alert(boxNo + ' 번함이 열립니다.');\n            this.boxNo = boxNo;\n            this.log3_data.postNo = '1111101';\n            this.log3_data.boxNo = boxNo;\n            this.log3_data.userId = 'deli001';\n            this.log3_data.menuName = '등기투입';\n            this.log3_data.actionData = '등기함선택(함열기)';\n            // 로그처리\n            axios.post(\"http://localhost:8910/admin/dispenserlog/create\", this.log3_data, {\n                header: {\n                    \"Context-Type\": \"multipart/form-data\",\n                },\n            })\n            .then((res) => { // 성공했을 경우\n                console.log(\"성공\", res);\n\n            })\n            .catch((res) => { // 실패했을 경우\n                console.error(\"실패 \", res);\n            });\n\n            // 함 열기\n            var client=new XMLHttpRequest();\n            client.open('POST', \"http://115.91.83.140/koreapost_locker_api/locker_api.php\", true);\n            client.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\n            var param = 'boxNo=1'  \n            client.send(param);\n/*\n            axios.post(\"http://115.91.83.140/koreapost_locker_api/locker_api.php\", {params:{boxNo:1}}, {\n                header: {\n                    \"Context-Type\": \"multipart/form-data\",\n                },\n            })\n            .then((res) => { // 성공했을 경우\n                console.log(\"성공\", res);\n\n            })\n            .catch((res) => { // 실패했을 경우\n                console.error(\"실패 \", res);\n            });\n*/\n        },\n        goAutoSelect(){\n            if (this.autoselect == '0') {\n                this.autoselect = '1';\n                this.log3_data.postNo = '1111101';\n                this.log3_data.userId = 'deli001';\n                this.log3_data.menuName = '등기투입';\n                this.log3_data.actionData = 'Box자동선택';\n            } else {\n                this.autoselect = '0';\n                this.log3_data.postNo = '1111101';\n                this.log3_data.userId = 'deli001';\n                this.log3_data.menuName = '등기투입';\n                this.log3_data.actionData = 'Box직접선택';\n            }\n            // 로그처리\n            axios.post(\"http://localhost:8910/admin/dispenserlog/create\", this.log3_data, {\n                header: {\n                    \"Context-Type\": \"multipart/form-data\",\n                },\n            })\n            .then((res) => { // 성공했을 경우\n                console.log(\"성공\", res);\n\n            })\n            .catch((res) => { // 실패했을 경우\n                console.error(\"실패 \", res);\n            });\n        },\n        goDone(){\n            this.log2_data.postNo = '1111101';\n            this.log2_data.userId = 'deli001';\n            this.log2_data.menuName = '등기투입';\n            this.log2_data.actionData = '투입종료';\n            // 로그처리\n            axios.post(\"http://localhost:8910/admin/dispenserlog/create\", this.log2_data, {\n                header: {\n                    \"Context-Type\": \"multipart/form-data\",\n                },\n            })\n            .then((res) => { // 성공했을 경우\n                console.log(\"성공\", res);\n\n            })\n            .catch((res) => { // 실패했을 경우\n                console.error(\"실패 \", res);\n            });\n\n            this.$router.push('/');\n        },\n        modalClose() {\n            this.$refs.modal_selectbox.style.display = 'none'; \n        },\n        // 등기투입\n        postRegiNo() {\n            axios.post(\"https://postnet.co.kr/savePutNmDistrRegiMail.jsp\", this.request_data, {\n                header: {\n                    \"Context-Type\": \"multipart/form-data\",\n                },\n            })\n            .then((res) => { // 성공했을 경우\n                console.log(\"성공\", res);\n                // statusCd : 등기투입결과 - 1 - S성공,F실패\n                \n            })\n            .catch((res) => { // 실패했을 경우\n                console.error(\"실패 \", res);\n            });\n        }\n\n    },\n    created() {\n    },\n    mounted() {\n        this.autoselect = '0';\n\n        this.log3_data.postNo = '1111101';\n        this.log3_data.userId = 'deli001';\n        this.log3_data.menuName = '등기투입';\n        this.log3_data.actionData = '전체 등기함정보 가져오기';\n        // 로그처리\n        axios.post(\"http://localhost:8910/admin/dispenserlog/create\", this.log2_data, {\n            header: {\n                \"Context-Type\": \"multipart/form-data\",\n            },\n        })\n        .then((res) => { // 성공했을 경우\n            console.log(\"성공\", res);\n\n        })\n        .catch((res) => { // 실패했을 경우\n            console.error(\"실패 \", res);\n        });\n\n        // 전체등기함 상태값 가져오기\n        this.box_data.postNo = '1111101';\n        axios.get(\"http://localhost:8910/admin/dispenser/status\", this.box_data, {\n            header: {\n                \"Context-Type\": \"multipart/form-data\",\n            },\n        })\n        .then((res) => { // 성공했을 경우\n            console.log(\"등기함상태\", JSON.stringify(res.data));\n            \n            this.boxData = JSON.parse(JSON.stringify(res.data.data.items));\n            console.log(\"등기함갯수\", this.boxData.length);\n            for (var i = 0; i < this.boxData.length; i++) {\n                console.log(\"Box정보\", this.boxData[i].boxNo);\n                if (this.boxData[i].status == '0') { // 빈함이면\n                    this.boxStatus.boxNo = this.boxData[i].boxNo; \n                    this.boxStatus.boxNoNo = this.boxData[i].boxNoNo; \n                    this.boxStatus.status = this.boxData[i].status; \n                    this.boxStatus.boxSize = this.boxData[i].boxSize; \n                    this.boxStatus.regiNo = this.boxData[i].regiNo; \n                    this.boxStatus.verificationNo = this.boxData[i].verificationNo; \n                    this.boxStatus.receiptName = this.boxData[i].receiptName; \n                    this.boxStatus.receiptLicenseNo = this.boxData[i].receiptLicenseNo; \n                    this.boxStatus.receiptPhoneNo = this.boxData[i].receiptPhoneNo; \n                    this.boxStatus.receiptAddr = this.boxData[i].receiptAddr; \n                    this.boxStatus.receiptAddrDetail = this.boxData[i].receiptAddrDetail; \n                    this.boxStatus.receiptPwd = this.boxData[i].receiptPwd; \n                    this.boxStatus.createDate = this.boxData[i].createDate; \n                    this.boxStatus.updateDate = this.boxData[i].updateDate; \n                } else {\n                    console.log(\"\");\n                }\n            }\n\n        })\n        .catch((res) => { // 실패했을 경우\n            console.log(\"등기함상태\", res.errmsg);\n            alert('관리자에게 문의 바랍니다.');\n        });\n    }\n\n};\n</script>\n\n<style>\n@keyframes blink-effect {\n  50% {\n    opacity: 0;\n  }\n}\n\n#selectbox_auto {\n  animation: blink-effect 1s step-end infinite;\n\n  /*\n  animation-name: blink-effect;\n  animation-duration: 1s;\n  animation-iteration-count:infinite;\n  animation-timing-function:step-end;\n  */\n}\n</style>"],"mappings":";;EAEaA,KAAK,EAAC;AAAM;;EAGRA,KAAK,EAAC;AAAQ;gCAEfC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAc,I,aACrBC,mBAAA,CAA2C;EAAtCD,KAAK,EAAC;AAAmB,GAAC,QAAM,E;;EAMxCA,KAAK,EAAC;AAAqB;;EAInBA,KAAK,EAAC;AAAe;;EAClBE,GAAG,EAAC;AAAK;;EAOpBF,KAAK,EAAC;AAAkB;gCACzBC,mBAAA,CACM;EADDD,KAAK,EAAC;AAAgB;;uBA1BvCG,mBAAA,CAkCM,cAjCFF,mBAAA,CAgCM,OAhCNG,UAgCM,GA9BFC,mBAAA,+BAAkC,EAClCJ,mBAAA,CAMM,OANNK,UAMM,GALFL,mBAAA,CAAiD;IAA5CD,KAAK,EAAC,WAAW;IAAMO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;MACzCG,UAEM,EACNX,mBAAA,CAA6C;IAAxCD,KAAK,EAAC,MAAM;IAAOO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,MAAA,IAAAH,QAAA,CAAAG,MAAA,IAAAJ,IAAA,CAAM;QAGzCJ,mBAAA,0BAA6B,EAC7BJ,mBAAA,CAUM,OAVNa,UAUM,GARFT,mBAAA,2BAA8B,EAC9BJ,mBAAA,CAKM;IALDD,KAAK,EAjB1Be,eAAA,EAiB2B,OAAO;MAAA,YAAwEC,IAAA,CAAAC;IAAO;IAA9EC,EAAE,EAAC,iBAAiB;IAAChB,GAAG,EAAC;MACxCD,mBAAA,CAGM,OAHNkB,UAGM,GAFFlB,mBAAA,CAAgC,MAAhCmB,UAAgC,EAAlB,eAAa,yBAC3BnB,mBAAA,CAA2C;IAA9BM,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAW,UAAA,IAAAX,QAAA,CAAAW,UAAA,IAAAZ,IAAA,CAAU;KAAE,IAAE,E,sBAIxCJ,mBAAA,cAAiB,EAEvBJ,mBAAA,CAOM,OAPNqB,UAOM,GANFC,UACM,EACNtB,mBAAA,CACM;IADDD,KAAK,EAAC,wBAAwB;IAACkB,EAAE,EAAC,gBAAgB;IAAOX,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAc,YAAA,IAAAd,QAAA,CAAAc,YAAA,IAAAf,IAAA,CAAY;MAEjFR,mBAAA,CACM;IADDD,KAAK,EAAC,gBAAgB;IAAMO,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAe,MAAA,IAAAf,QAAA,CAAAe,MAAA,IAAAhB,IAAA,CAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}