{"ast":null,"code":"import { defineComponent } from \"vue\";\nimport '@/assets/css/main/mainslide.css';\nimport { createDispenserLog } from '@/api/dispenserlog';\nimport { uploadPath } from '@/api/storage';\nimport { getToken } from '@/utils/auth';\n\n//import dayjs from \"dayjs\"\n//const nowDay_json = \"@/assets/json/\" + dayjs().format('YYYY-MM-DD') + \".json\";\n//import json_day_log from nowDay_json;\n\n//import json_log from \"@/assets/json/log.json\"\n//const log.select = json_log.select\n\nexport default defineComponent({\n  name: \"MainSlide\",\n  data() {\n    return {\n      request1_data: {\n        postNo: '11111',\n        boxNo: '01',\n        nenuName: '[메뉴]등기수령'\n      },\n      request2_data: {\n        postNo: '11111',\n        boxNo: '01',\n        nenuName: '[메뉴]등기투입'\n      },\n      request3_data: {\n        postNo: '11111',\n        boxNo: '01',\n        nenuName: '[메뉴]사용현황'\n      }\n    };\n  },\n  methods: {\n    // 화면 클릭하면 안내 메세지 바뀜\n    footerMessage() {\n      this.$store.commit('setOrder', this.order);\n    },\n    goMenu1() {\n      createDispenserLog(this.request_data).then(response => {\n        this.list.unshift(response.data.data);\n        this.$notify.success({\n          title: '성공',\n          message: '등록성공'\n        });\n        this.$router.go(\"/receiptmenu\");\n      }).catch(response => {\n        this.$notify.error({\n          title: 'Error',\n          message: response.data.errmsg\n        });\n      });\n    },\n    goMenu2() {\n      createDispenserLog(this.request_data).then(response => {\n        this.list.unshift(response.data.data);\n        this.$notify.success({\n          title: '성공',\n          message: '등록성공'\n        });\n        this.$router.go(\"/checkmanager\");\n      }).catch(response => {\n        this.$notify.error({\n          title: 'Error',\n          message: response.data.errmsg\n        });\n      });\n    },\n    goMenu3() {\n      createDispenserLog(this.request_data).then(response => {\n        this.list.unshift(response.data.data);\n        this.$notify.success({\n          title: '성공',\n          message: '등록성공'\n        });\n        this.$router.go(\"/status\");\n      }).catch(response => {\n        this.$notify.error({\n          title: 'Error',\n          message: response.data.errmsg\n        });\n      });\n    }\n\n    /**\n    * txt파일을 불러온다\n    *\n    importTextFile() {\n        const currentTime = dayjs().format('YYYY-MM-DD'); // 현재날짜\n        const input = document.createElement('input');\n        input.type = 'file';\n        input.accept = 'text/plain'; // 확장자가 xxx, yyy 일때, \".xxx, .yyy\"\n        // this 접근을 위해 선언 필요\n        const self = this;\n        input.onchange = function () {\n            const file = new FileReader();\n            file.onload = () => {\n                document.getElementById('text-data').textContent = file.result;\n                self.$data.textData = file.result;\n            };\n            file.readAsText(this.files[0]);\n        };\n        input.click();\n    },\n    **\n    * textData를 txt 파일로 저장한다.\n    \n    exportTextFile() {\n        const text = document.getElementById('text-data').value;\n        // 저장하고자하는 파일명\n        const filename = '텍스트파일명';\n        const element = document.createElement('a');\n        element.setAttribute('href', 'data:text/plain;charset=utf-8, ' + encodeURIComponent(text));\n        element.setAttribute('download', filename);\n        document.body.appendChild(element);\n        element.click();\n    },\n    */\n  },\n  created() {\n    //        this.$store.commit('setCartList',null); // 장바구니 비우기\n    //        this.$store.commit('setPay', null); // 결제 방법 비우기\n    //        this.$store.commit('setUserVo', null); // 적립한 사람의 정보 지우기\n    //        this.$store.commit('setSavePoint',null); // 적립된 포인트 정보 지우기\n  },\n  computed: {\n    headers() {\n      return {\n        'X-KoreaPost-Token': getToken()\n      };\n    }\n  }\n});","map":{"version":3,"names":["defineComponent","createDispenserLog","uploadPath","getToken","name","data","request1_data","postNo","boxNo","nenuName","request2_data","request3_data","methods","footerMessage","$store","commit","order","goMenu1","request_data","then","response","list","unshift","$notify","success","title","message","$router","go","catch","error","errmsg","goMenu2","goMenu3","created","computed","headers"],"sources":["F:\\solution\\solution\\KoreaPost\\koreapost\\3.dispenser_vue3\\src\\views\\main\\MainSilde.vue"],"sourcesContent":["<template>\n<div class=\"wrap\">\n    <div class=\"mainViewContainer\">\n        <!-- npm install vue3-carousel -->\n        <div class=\"wrapper\">\n            <div class=\"mlogoBtn\">   \n            </div>\n\n            <div class=\"mtitleBtn\">   \n            </div>\n\n            <div class=\"sltBtn\">   \n                <img src=\"@/assets/images/main_menu01.png\"  class=\"receiptmenu\" id=\"menu1\" v-on:click=\"goMenu1\">\n                <img src=\"@/assets/images/main_menu02.png\"     class=\"checkmanager\" id=\"menu2\"  v-on:click=\"goMenu1=2\">\n                <img src=\"@/assets/images/main_menu03.png\"    class=\"status\" id=\"menu3\"  v-on:click=\"goMenu3\">\n            </div>\n        </div>\n        \n    </div>\n    <!-- mainViewContainer -->\n</div>   \n<!-- wrap  -->\n</template>\n\n\n<script>\nimport { defineComponent } from \"vue\";\nimport '@/assets/css/main/mainslide.css'\n\nimport { createDispenserLog} from '@/api/dispenserlog'\nimport { uploadPath } from '@/api/storage'\nimport { getToken } from '@/utils/auth'\n\n//import dayjs from \"dayjs\"\n//const nowDay_json = \"@/assets/json/\" + dayjs().format('YYYY-MM-DD') + \".json\";\n//import json_day_log from nowDay_json;\n\n//import json_log from \"@/assets/json/log.json\"\n//const log.select = json_log.select\n\nexport default defineComponent({\n\tname: \"MainSlide\",\n\tdata() {\n\t\treturn {\n            request1_data :{postNo:'11111',boxNo:'01',nenuName:'[메뉴]등기수령'},\n            request2_data :{postNo:'11111',boxNo:'01',nenuName:'[메뉴]등기투입'},  \n            request3_data :{postNo:'11111',boxNo:'01',nenuName:'[메뉴]사용현황'}   \n\t\t};\n\t},\n    methods: {\n        // 화면 클릭하면 안내 메세지 바뀜\n        footerMessage(){\n            this.$store.commit('setOrder', this.order);\n        },\n        goMenu1(){\n            createDispenserLog(this.request_data)\n            .then(response => {\n              this.list.unshift(response.data.data)\n              this.$notify.success({\n                title: '성공',\n                message: '등록성공'\n              })\n              this.$router.go(\"/receiptmenu\");\n            })\n            .catch(response => {\n              this.$notify.error({\n                title: 'Error',\n                message: response.data.errmsg\n              })\n            })\n\n        },\n        goMenu2(){\n            createDispenserLog(this.request_data)\n            .then(response => {\n              this.list.unshift(response.data.data)\n              this.$notify.success({\n                title: '성공',\n                message: '등록성공'\n              })\n              this.$router.go(\"/checkmanager\");\n            })\n            .catch(response => {\n              this.$notify.error({\n                title: 'Error',\n                message: response.data.errmsg\n              })\n            })\n\n        },\n        goMenu3(){\n            createDispenserLog(this.request_data)\n            .then(response => {\n              this.list.unshift(response.data.data)\n              this.$notify.success({\n                title: '성공',\n                message: '등록성공'\n              })\n              this.$router.go(\"/status\");\n            })\n            .catch(response => {\n              this.$notify.error({\n                title: 'Error',\n                message: response.data.errmsg\n              })\n            })\n        },\n\n        /**\n        * txt파일을 불러온다\n        *\n        importTextFile() {\n            const currentTime = dayjs().format('YYYY-MM-DD'); // 현재날짜\n            const input = document.createElement('input');\n            input.type = 'file';\n            input.accept = 'text/plain'; // 확장자가 xxx, yyy 일때, \".xxx, .yyy\"\n            // this 접근을 위해 선언 필요\n            const self = this;\n            input.onchange = function () {\n                const file = new FileReader();\n                file.onload = () => {\n                    document.getElementById('text-data').textContent = file.result;\n                    self.$data.textData = file.result;\n                };\n                file.readAsText(this.files[0]);\n            };\n            input.click();\n        },\n        **\n        * textData를 txt 파일로 저장한다.\n        \n        exportTextFile() {\n            const text = document.getElementById('text-data').value;\n            // 저장하고자하는 파일명\n            const filename = '텍스트파일명';\n            const element = document.createElement('a');\n            element.setAttribute('href', 'data:text/plain;charset=utf-8, ' + encodeURIComponent(text));\n            element.setAttribute('download', filename);\n            document.body.appendChild(element);\n            element.click();\n        },\n        */\n    },\n    created (){\n//        this.$store.commit('setCartList',null); // 장바구니 비우기\n//        this.$store.commit('setPay', null); // 결제 방법 비우기\n//        this.$store.commit('setUserVo', null); // 적립한 사람의 정보 지우기\n//        this.$store.commit('setSavePoint',null); // 적립된 포인트 정보 지우기\n        \n    },\n    \n    computed: {\n    headers() {\n      return {\n        'X-KoreaPost-Token': getToken()\n      }\n    }\n  },\n    \n});\n</script>\n<style>\n</style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}