{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport '@/assets/css/input/reginoscan.css';\nimport axios from 'axios';\n//import { SerialPort } from 'serialport';\n\n//import dayjs from \"dayjs\"\n//const nowDay_json = \"@/assets/json/\" + dayjs().format('YYYY-MM-DD') + \".json\";\n//import json_day_log from nowDay_json;\n\nexport default {\n  name: \"RegiNoScan\",\n  data() {\n    return {\n      log_data: {},\n      regi_data: {},\n      regiNo: ''\n    };\n  },\n  methods: {\n    goBack() {\n      this.$router.go(-1);\n    },\n    goHome() {\n      this.$router.push('/');\n    },\n    onDecode(result) {\n      this.qrCodeData = result;\n    },\n    checkQR() {\n      // 로그처리\n      this.log_data.postNo = '1111101';\n      this.log_data.boxNo = '';\n      this.log_data.userId = '';\n      this.log_data.menuName = '[메뉴]등기번호스캔';\n      this.log_data.actionData = '등기번호 스캔 완료:' + this.regiNo;\n      axios.post(\"http://localhost:8910/admin/dispenserlog/create\", this.log_data, {\n        header: {\n          \"Context-Type\": \"multipart/form-data\"\n        }\n      }).then(res => {\n        // 성공했을 경우\n        console.log(\"성공\", res);\n      }).catch(res => {\n        // 실패했을 경우\n        console.error(\"실패 \", res);\n      });\n      axios({\n        method: 'get',\n        url: 'http://localhost:5193/api/scanQR',\n        timeout: 30000,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: {}\n      }).then(function (response) {\n        if (response.status === 200) {\n          const responseBody = response.data;\n          console.log(responseBody);\n          console.log(\"qrCode :\" + responseBody.qrCode);\n          this.regiNo = responseBody.qrCode;\n\n          // 등기번호 인증\n          this.regi_data.regiNo = responseBody.qrCode;\n          axios.get(\"http://localhost:8910/admin/dispenser/checkregino\", this.regi_data, {\n            header: {\n              \"Context-Type\": \"multipart/form-data\"\n            }\n          }).then(res => {\n            // 성공했을 경우\n            console.log(\"성공\", res);\n            console.log(\"성공\", res.data.errno);\n            if (res.data.errno == -1) {\n              console.log(res.data.errmsg, this.request2_data.userId);\n              this.$router.push('/selectbox');\n            } else {\n              this.$router.push('/selectbox');\n            }\n          }).catch(res => {\n            // 실패했을 경우\n            console.error(\"실패 \", res);\n          });\n        } else {\n          console.error('error:', response.statusText);\n        }\n      }).catch(function (error) {\n        console.error('error:', error);\n      });\n    },\n    goSelectBox() {\n      if (this.regiNo == '') {\n        alert('정상적인 등기번호를 스캔해 주세요.');\n      } else {\n        // 로그처리\n        this.log_data.postNo = '1111101';\n        this.log_data.boxNo = '';\n        this.log_data.userId = '';\n        this.log_data.menuName = '[메뉴]등기번호스캔';\n        this.log_data.actionData = '등기번호 스캔 완료:' + this.regiNo;\n        axios.post(\"http://localhost:8910/admin/dispenserlog/create\", this.log_data, {\n          header: {\n            \"Context-Type\": \"multipart/form-data\"\n          }\n        }).then(res => {\n          // 성공했을 경우\n          console.log(\"성공\", res);\n        }).catch(res => {\n          // 실패했을 경우\n          console.error(\"실패 \", res);\n        });\n        this.$router.push('/selectbox');\n      }\n    }\n  },\n  created() {},\n  mounted() {}\n};","map":{"version":3,"names":["axios","name","data","log_data","regi_data","regiNo","methods","goBack","$router","go","goHome","push","onDecode","result","qrCodeData","checkQR","postNo","boxNo","userId","menuName","actionData","post","header","then","res","console","log","catch","error","method","url","timeout","headers","response","status","responseBody","qrCode","get","errno","errmsg","request2_data","statusText","goSelectBox","alert","created","mounted"],"sources":["D:\\0610\\1020_KoreaPost\\2.Dispenser\\02.Source\\3.dispenser_vue3\\src\\views\\input\\RegiNoScan.vue"],"sourcesContent":["<template>\n      <div>\n        <div class=\"wrap\">\n\n            <!-- ======== 카테고리 헤더 ======== -->\n            <div class=\"header\">\n                <div class=\"main_logo\" v-on:click=\"goHome\"></div>\n                <div class=\"header_title\">\n                    <div class=\"header_title_down\">등기번호 스캔</div>    \n                </div>\n                <div class=\"back\"  v-on:click=\"goBack\"></div>    \n            </div>\n\n            <!-- ======== 내용 ======== -->\n            <div class=\"reginoscan_container\">\n                <div class=\"reginoscan_area\" v-on:click=\"goSelectBox\">\n                </div>\n\n                <div class=\"reginoscan_ment\">\n                </div>\n            </div><!--container끝-->\n            <div class=\"reginoscan_tail\" v-on:click=\"goSelectBox\">\n            </div>\n        </div><!--wrap 끝-->\n\n    </div>\n</template>\n<script>\nimport '@/assets/css/input/reginoscan.css';\nimport axios from 'axios';\n//import { SerialPort } from 'serialport';\n\n//import dayjs from \"dayjs\"\n//const nowDay_json = \"@/assets/json/\" + dayjs().format('YYYY-MM-DD') + \".json\";\n//import json_day_log from nowDay_json;\n\nexport default {\n    name: \"RegiNoScan\",\n    data() {\n        return {\n            log_data :{},\n            regi_data :{},\n            regiNo:'',\n        };\n    },\n    methods: {\n        goBack(){\n            this.$router.go(-1);\n        },\n        goHome(){\n            this.$router.push('/');\n        },\n        onDecode (result) {\n            this.qrCodeData = result;\n        },\n        checkQR(){\n            // 로그처리\n            this.log_data.postNo = '1111101';\n            this.log_data.boxNo = '';\n            this.log_data.userId = '';\n            this.log_data.menuName = '[메뉴]등기번호스캔';\n            this.log_data.actionData = '등기번호 스캔 완료:'+this.regiNo;\n            axios.post(\"http://localhost:8910/admin/dispenserlog/create\", this.log_data, {\n                header: {\n                    \"Context-Type\": \"multipart/form-data\",\n                },\n            })\n            .then((res) => { // 성공했을 경우\n                console.log(\"성공\", res);\n\n                })\n                .catch((res) => { // 실패했을 경우\n                    console.error(\"실패 \", res);\n                });\n            axios({\n                method: 'get',\n                url: 'http://localhost:5193/api/scanQR',\n                timeout : 30000, \n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                data: {}\n            })\n            .then(function(response) {\n                if (response.status === 200) {\n                    const responseBody = response.data;\n                    console.log(responseBody);\n                    console.log(\"qrCode :\"+responseBody.qrCode);\n        \n                    this.regiNo = responseBody.qrCode;\n\n                    // 등기번호 인증\n                    this.regi_data.regiNo = responseBody.qrCode;\n                    axios.get(\"http://localhost:8910/admin/dispenser/checkregino\", this.regi_data, {\n                        header: {\n                            \"Context-Type\": \"multipart/form-data\",\n                        },\n                    })\n                    .then((res) => { // 성공했을 경우\n                        console.log(\"성공\", res);\n                        console.log(\"성공\", res.data.errno);\n\n                        if (res.data.errno == -1) {\n                            console.log(res.data.errmsg, this.request2_data.userId);\n                            this.$router.push('/selectbox');\n                        } else {                \n                            this.$router.push('/selectbox');\n                        }\n\n                    })\n                    .catch((res) => { // 실패했을 경우\n                        console.error(\"실패 \", res);\n                    });\n            \n                } else {\n                    console.error('error:', response.statusText);\n                }\n            })\n            .catch(function(error) {\n                console.error('error:', error);\n            });\n        },\n        goSelectBox(){\n            if (this.regiNo == '') {\n                alert('정상적인 등기번호를 스캔해 주세요.');\n            } else {\n                // 로그처리\n                this.log_data.postNo = '1111101';\n                this.log_data.boxNo = '';\n                this.log_data.userId = '';\n                this.log_data.menuName = '[메뉴]등기번호스캔';\n                this.log_data.actionData = '등기번호 스캔 완료:'+this.regiNo;\n                axios.post(\"http://localhost:8910/admin/dispenserlog/create\", this.log_data, {\n                    header: {\n                        \"Context-Type\": \"multipart/form-data\",\n                    },\n                })\n                .then((res) => { // 성공했을 경우\n                    console.log(\"성공\", res);\n\n                })\n                .catch((res) => { // 실패했을 경우\n                    console.error(\"실패 \", res);\n                });\n\n                this.$router.push('/selectbox');\n            }\n        }     \n    },\n    created() {\n    },\n    mounted() {\n    }\n\n};\n</script>\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}