{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nimport '@/assets/css/measurement/ingmeasurement.css';\n//import dayjs from \"dayjs\";\nimport axios from 'axios';\nimport json_log from \"@/assets/json/log.json\";\nexport default {\n  name: \"MenuIngMeasurement\",\n  data() {\n    return {\n      video: null,\n      canvas: null,\n      photoSrc: null,\n      streaming: false,\n      height: 0,\n      width: 800\n    };\n  },\n  components: {},\n  methods: {\n    goBack() {\n      this.$router.go(-1);\n    },\n    goHome() {\n      this.$router.push('/');\n    },\n    goReMeasurement() {\n      this.$router.push('/remeasurement');\n    },\n    goConfirmMeasurement() {\n      json_log.box_weight = this.box_weight;\n      json_log.box_size = this.box_size;\n      json_log.box_amt = this.box_amt;\n      this.$router.push('/confirmmeasurement');\n    },\n    getMediaStream() {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(stream => {\n        this.video.srcObject = stream;\n        this.video.play();\n      }).catch(err => {\n        console.error(`error occurred : ${err}`);\n      });\n    },\n    playVideo() {\n      if (!this.streaming) {\n        this.streaming = true;\n        this.height = this.video.videoHeight / this.video.videoWidth * this.width;\n        this.video.height = this.height;\n        this.video.width = this.width;\n        this.canvas.height = this.height;\n        this.canvas.width = this.width;\n      }\n    },\n    takePhoto() {\n      const context = this.canvas.getContext('2d');\n      context.drawImage(this.video, 0, 0, this.width, this.height);\n      this.photoSrc = this.canvas.toDataURL('image/png');\n    },\n    clearPhoto() {\n      const context = this.canvas.getContext('2d');\n      context.fillStyle = \"#AAA\";\n      context.fillRect(0, 0, this.width, this.height);\n      this.photoSrc = this.canvas.toDataURL('image/png');\n    },\n    async checkCamera() {\n      //카메라 모듈 실행\n      let stream = await navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: false\n      });\n      document.querySelector(\"#video\").srcObject = stream;\n    },\n    takePickture() {\n      // 스크린샷 이미지를 가져오기 위한 작업\n      let canvas = document.querySelector(\"#canvas\");\n      let video = document.querySelector(\"#video\");\n      canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\n      let img_url = canvas.toDataURL('image/jpeg');\n\n      //무게 측정 api 호출 한 후 부피 측정 호출 해야함.\n      // 무게측정 API 호출\n      const apiUrl_weight = 'http://localhost:5193/api/weight';\n      axios({\n        method: 'get',\n        url: apiUrl_weight,\n        timeout: 30000,\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        data: {}\n      }).then(function (response) {\n        if (response.status === 200) {\n          const responseWeight = response.data;\n          console.log(responseWeight);\n          console.log(\"무게 :\" + responseWeight.weight);\n\n          // 부피측정 API 호출\n          /**\n           * _img_file : base64 카메라 이미지\n           * _requestFlag : 부피만측정일 경우 => 1 , \n           *               부피 + OCR : =>2 (OCR : 글자인식)\n           *  부피 + ocr인식일 경우(requestFlag : 2)는 모든 정보(발송인,수신인,물건 정보)를 같이 파싱을 해야 함.\n           *  부피만 측정일 경우는 (requestFlag : 1)는 물건 정보만 파싱.\n           */\n          const apiUrl_size = 'http://localhost:5193/api/volumeOcr';\n          var sendData = new FormData();\n          sendData.append(\"image\", img_url);\n          sendData.append(\"requestFlag\", \"1\");\n          axios({\n            method: 'post',\n            url: apiUrl_size,\n            timeout: 30000,\n            headers: {\n              \"Content-Type\": \"application/json\"\n            },\n            data: sendData\n          }).then(function (response) {\n            if (response.status === 200) {\n              const responseBody = response.data;\n              console.log(responseBody);\n              console.log(\"가로 : \" + responseBody.width + \", 세로 : \" + responseBody.depth + \", 높이 : \" + responseBody.height);\n              var volumeSum = responseBody.width + Number(responseBody.height) + Number(responseBody.depth);\n              console.log(\"부피 : \" + volumeSum);\n              //                            saveKiosk('s_volume',volumeSum.toString());\n              //                            saveKiosk('s_width',responseBody.width.toString());\n              //                            saveKiosk('s_depth',responseBody.depth.toString());\n              //                            saveKiosk('s_height',responseBody.height.toString());\n\n              /**\n               * 나주 요금조회 API를 호출 하여 통신 해야 하며\n               * 통신 결과 성공 할 경우 다음 단계로 가서 결제 페이지로 진행이 되어야함.\n               */\n              var getJson = '';\n              var sendData2 = new FormData();\n              sendData2.append(\"prcLargeDivCd\", \"P01\");\n              sendData2.append(\"prcMidDivCd\", \"02\");\n              sendData2.append(\"prcSmallDivCd\", \"11\");\n              sendData2.append(\"prcCalStdWght\", getJson.s_weight);\n              sendData2.append(\"prcCalStdVolm\", getJson.s_volume);\n              sendData2.append(\"frnAreaCd\", \"1\");\n\n              //console.log(JSON.stringify(Object.fromEntries(sendData2)));\n              //var trans_data = JSON.stringify(Object.fromEntries(sendData2));\n              axios({\n                method: 'post',\n                //url: \"http://testkpl.koreapost.go.kr/autoPost/RetrieveNmPostPrc.jsp\",\n                url: \"http://118.217.181.132/autoPost/RetrieveNmPostPrc.php\",\n                timeout: 30000,\n                headers: {\n                  \"Content-Type\": \"application/x-www-form-urlencoded\"\n                },\n                //data:trans_data\n                data: sendData2\n              }).then(function (response) {\n                if (response.status === 200) {\n                  const responseBody = response.data;\n                  console.log(responseBody);\n                  let parseXML = new DOMParser();\n                  let xmlDoc = parseXML.parseFromString(responseBody, \"text/xml\");\n                  let arr = new Array();\n                  let list = xmlDoc.querySelectorAll(\"list\");\n                  list.forEach(value => {\n                    value.childNodes.forEach(value2 => {\n                      if (value2.nodeType === 1) {\n                        arr.push(value2.textContent);\n                      }\n                    });\n                  });\n                  console.log(arr[0]);\n                  ///saveKiosk('price',arr[0]);\n\n                  this.$router.push('/confirmmeasurement');\n                } else {\n                  console.error('error:', response.statusText);\n                }\n              }).catch(function (error) {\n                console.error('error:', error);\n              });\n            } else {\n              console.error('error:', response.statusText);\n            }\n          }).catch(function (error) {\n            console.error('error:', error);\n          });\n        } else {\n          console.error('error:', response.statusText);\n        }\n      }).catch(function (error) {\n        console.error('error:', error);\n      });\n      this.$router.push('/ingmeasurement');\n    }\n  },\n  created() {},\n  mounted() {\n    this.video = this.$refs.video;\n    this.canvas = this.$refs.canvas;\n    this.getMediaStream();\n    // this.clearPhoto();    \n  }\n};","map":{"version":3,"names":["axios","json_log","name","data","video","canvas","photoSrc","streaming","height","width","components","methods","goBack","$router","go","goHome","push","goReMeasurement","goConfirmMeasurement","box_weight","box_size","box_amt","getMediaStream","navigator","mediaDevices","getUserMedia","audio","then","stream","srcObject","play","catch","err","console","error","playVideo","videoHeight","videoWidth","takePhoto","context","getContext","drawImage","toDataURL","clearPhoto","fillStyle","fillRect","checkCamera","document","querySelector","takePickture","img_url","apiUrl_weight","method","url","timeout","headers","response","status","responseWeight","log","weight","apiUrl_size","sendData","FormData","append","responseBody","depth","volumeSum","Number","getJson","sendData2","s_weight","s_volume","parseXML","DOMParser","xmlDoc","parseFromString","arr","Array","list","querySelectorAll","forEach","value","childNodes","value2","nodeType","textContent","statusText","created","mounted","$refs"],"sources":["D:\\0610\\1020_KoreaPost\\1.Receipto\\Receiptor\\src\\views\\measurement\\IngMeasurement.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"wrap\">\n\n            <!-- ======== 카테고리 헤더 ======== -->\n            <div class=\"header\">\n                <div class=\"main_logo\" v-on:click=\"goHome\"></div>\n                <div class=\"header_title\">\n                    <div class=\"header_title_down\">부피/크기 측정중</div>    \n                </div>\n                <div class=\"back\"  v-on:click=\"goBack\"></div>    \n            </div>\n\n            <!-- ======== 내용 나오는곳 ======== -->\n            <div class=\"ingmeasurement_container\">\n                <div class=\"ingmeasurement_area\" >\n                    <video id=\"video\" width=\"100%\" height=\"100%\" ref=\"camara\"  @canplay=\"playVideo\" autoplay playsinline loop></video>        \n                </div>\n                <div class=\"ingmeasurement_data_area\"  v-on:click=\"goConfirmMeasurement\">\n                    <canvas id=\"canvas\" width=\"100%\" height=\"100%\" ref=\"canvas\"></canvas>\n                </div>\n\n                <div class=\"output\">\n                    <img id=\"photo\" :src=\"photoSrc\" alt=\"스크린 샷이 표기됩니다.\"/>\n                </div>\n              </div><!--container끝-->\n\n            <div class=\"ingmeasurement_btn_area\">\n            </div>\n\n\n\n        </div><!--wrap 끝-->\n\n    </div>\n</template>\n<script>\nimport '@/assets/css/measurement/ingmeasurement.css';\n//import dayjs from \"dayjs\";\nimport axios from 'axios';\nimport json_log from \"@/assets/json/log.json\";\n\nexport default {\n    name: \"MenuIngMeasurement\",\n    data() {\n        return {\n            video: null,\n            canvas: null,\n            photoSrc: null,\n            streaming: false,\n            height: 0,\n            width: 800        \n        };\n    },\n\n    components: {\n    },\n    methods: {\n        goBack(){\n            this.$router.go(-1);\n        },\n        goHome(){\n            this.$router.push('/');\n        },\n        goReMeasurement(){\n            this.$router.push('/remeasurement');\n        },\n        goConfirmMeasurement(){\n            json_log.box_weight = this.box_weight;\n            json_log.box_size = this.box_size;\n            json_log.box_amt = this.box_amt;\n\n            this.$router.push('/confirmmeasurement');\n        },\n        getMediaStream() {\n            navigator.mediaDevices.getUserMedia({video: true, audio: true}\n                ).then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n                }).catch((err) => {\n                    console.error(`error occurred : ${err}`);\n                })\n        },\n        playVideo() {\n            if (!this.streaming) {\n                this.streaming = true;\n                this.height = this.video.videoHeight / this.video.videoWidth * this.width;\n\n                this.video.height = this.height;\n                this.video.width = this.width;\n                this.canvas.height = this.height;\n                this.canvas.width = this.width;\n            }\n        }, \n        takePhoto() {\n            const context = this.canvas.getContext('2d');\n            context.drawImage(this.video,0,0, this.width, this.height);\n\n            this.photoSrc = this.canvas.toDataURL('image/png');\n        }, \n        clearPhoto() {\n            const context = this.canvas.getContext('2d');\n            context.fillStyle = \"#AAA\";\n            context.fillRect(0, 0, this.width, this.height);\n\n            this.photoSrc = this.canvas.toDataURL('image/png');\n        },\n        async checkCamera(){\n            //카메라 모듈 실행\n            let stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });\n            document.querySelector(\"#video\").srcObject = stream;\n        },\n\n        takePickture(){\n            // 스크린샷 이미지를 가져오기 위한 작업\n            let canvas = document.querySelector(\"#canvas\");\n            let video = document.querySelector(\"#video\");\n            canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\n            let img_url = canvas.toDataURL('image/jpeg');\n        \n            //무게 측정 api 호출 한 후 부피 측정 호출 해야함.\n            // 무게측정 API 호출\n            const apiUrl_weight = 'http://localhost:5193/api/weight';\n            axios({\n                method: 'get',\n                url: apiUrl_weight,\n                timeout : 30000, \n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                data: {}\n            })\n            .then(function(response) {\n                if (response.status === 200) {\n                    const responseWeight = response.data;\n                    console.log(responseWeight);\n                    console.log(\"무게 :\"+responseWeight.weight);\n\n                    // 부피측정 API 호출\n                    /**\n                     * _img_file : base64 카메라 이미지\n                     * _requestFlag : 부피만측정일 경우 => 1 , \n                     *               부피 + OCR : =>2 (OCR : 글자인식)\n                     *  부피 + ocr인식일 경우(requestFlag : 2)는 모든 정보(발송인,수신인,물건 정보)를 같이 파싱을 해야 함.\n                     *  부피만 측정일 경우는 (requestFlag : 1)는 물건 정보만 파싱.\n                     */\n                    const apiUrl_size = 'http://localhost:5193/api/volumeOcr';\n                    var sendData = new FormData();\n                    sendData.append(\"image\", img_url);\n                    sendData.append(\"requestFlag\", \"1\");\n                    axios({\n                        method: 'post',\n                        url: apiUrl_size,\n                        timeout : 30000, \n                        headers: {\n                                \"Content-Type\": \"application/json\"\n                            },\n                        data: sendData\n                    })\n                    .then(function(response) {\n                        if (response.status === 200) {\n                            const responseBody = response.data;\n                            console.log(responseBody);\n                            console.log(\"가로 : \"+responseBody.width+\", 세로 : \"+responseBody.depth+\", 높이 : \"+responseBody.height);\n                            var volumeSum = (responseBody.width)+Number(responseBody.height)+Number(responseBody.depth);\n                            console.log(\"부피 : \"+volumeSum);\n//                            saveKiosk('s_volume',volumeSum.toString());\n//                            saveKiosk('s_width',responseBody.width.toString());\n//                            saveKiosk('s_depth',responseBody.depth.toString());\n//                            saveKiosk('s_height',responseBody.height.toString());\n\n                            /**\n                             * 나주 요금조회 API를 호출 하여 통신 해야 하며\n                             * 통신 결과 성공 할 경우 다음 단계로 가서 결제 페이지로 진행이 되어야함.\n                             */\n                            var getJson = '';\n                        \n                            var sendData2 = new FormData();\n                            sendData2.append(\"prcLargeDivCd\", \"P01\");\n                            sendData2.append(\"prcMidDivCd\", \"02\");\n                            sendData2.append(\"prcSmallDivCd\", \"11\");\n                            sendData2.append(\"prcCalStdWght\", getJson.s_weight);\n                            sendData2.append(\"prcCalStdVolm\", getJson.s_volume);\n                            sendData2.append(\"frnAreaCd\", \"1\");\n\n                            //console.log(JSON.stringify(Object.fromEntries(sendData2)));\n                            //var trans_data = JSON.stringify(Object.fromEntries(sendData2));\n                            axios({\n                                method: 'post',\n                                //url: \"http://testkpl.koreapost.go.kr/autoPost/RetrieveNmPostPrc.jsp\",\n                                url: \"http://118.217.181.132/autoPost/RetrieveNmPostPrc.php\",\n                                timeout : 30000, \n                                headers: {\n                                        \"Content-Type\": \"application/x-www-form-urlencoded\"\n                                }, \n                                    //data:trans_data\n                                data:sendData2\n                            })\n                            .then(function(response) {\n                                if (response.status === 200) {\n                                    const responseBody = response.data;\n                                    console.log(responseBody);\n\n\n                                    let parseXML = new DOMParser();\n                                    let xmlDoc = parseXML.parseFromString(responseBody, \"text/xml\");\n\n                                    let arr = new Array();\n\n                                    let list = xmlDoc.querySelectorAll(\"list\"); \n                                    list.forEach(value => {\n                                        value.childNodes.forEach(value2 => { \t\n                                            if(value2.nodeType === 1){\n                                                arr.push(value2.textContent);\n                                            }\n                                        })\n                                    });\n                                    console.log(arr[0]);\n                                    ///saveKiosk('price',arr[0]);\n      \n                                    this.$router.push('/confirmmeasurement');\n                                } else {\n                                    console.error('error:', response.statusText);\n                                }\n                            })\n                            .catch(function(error) {\n                                console.error('error:', error);\n                            });\n\n                        } else {\n                            console.error('error:', response.statusText);\n                        }\n                    })\n                    .catch(function(error) {\n                        console.error('error:', error);\n                    });\n\n\n                } else {\n                    console.error('error:', response.statusText);\n                }\n            })\n            .catch(function(error) {\n                console.error('error:', error);\n            });\n\n\n            this.$router.push('/ingmeasurement');\n\n        }\n    \n\n    },\n    created() {\n    },\n    mounted() {\n        this.video = this.$refs.video;\n        this.canvas = this.$refs.canvas;\n        this.getMediaStream();\n       // this.clearPhoto();    \n    }\n\n};\n</script>\n<style></style>"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}