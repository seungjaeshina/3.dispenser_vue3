{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"wrap\"\n};\nconst _hoisted_2 = {\n  class: \"header\"\n};\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header_title\"\n}, [/*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"header_title_down\"\n}, \"부피/크기 측정중\")], -1 /* HOISTED */);\nconst _hoisted_4 = {\n  class: \"ingmeasurement_container\"\n};\nconst _hoisted_5 = {\n  class: \"ingmeasurement_area\"\n};\nconst _hoisted_6 = {\n  id: \"canvas\",\n  width: \"100%\",\n  height: \"100%\",\n  ref: \"canvas\"\n};\nconst _hoisted_7 = {\n  class: \"output\"\n};\nconst _hoisted_8 = [\"src\"];\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"ingmeasurement_btn_area\"\n}, null, -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", _hoisted_1, [_createCommentVNode(\" ======== 카테고리 헤더 ======== \"), _createElementVNode(\"div\", _hoisted_2, [_createElementVNode(\"div\", {\n    class: \"main_logo\",\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.goHome && $options.goHome(...args))\n  }), _hoisted_3, _createElementVNode(\"div\", {\n    class: \"back\",\n    onClick: _cache[1] || (_cache[1] = (...args) => $options.goBack && $options.goBack(...args))\n  })]), _createCommentVNode(\" ======== 내용 나오는곳 ======== \"), _createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"div\", _hoisted_5, [_createElementVNode(\"video\", {\n    id: \"video\",\n    width: \"100%\",\n    height: \"100%\",\n    ref: \"camara\",\n    onCanplay: _cache[2] || (_cache[2] = (...args) => $options.playVideo && $options.playVideo(...args)),\n    autoplay: \"\",\n    playsinline: \"\",\n    loop: \"\"\n  }, null, 544 /* NEED_HYDRATION, NEED_PATCH */)]), _createElementVNode(\"div\", {\n    class: \"ingmeasurement_data_area\",\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.goConfirmMeasurement && $options.goConfirmMeasurement(...args))\n  }, [_createElementVNode(\"canvas\", _hoisted_6, null, 512 /* NEED_PATCH */)]), _createElementVNode(\"div\", _hoisted_7, [_createElementVNode(\"img\", {\n    id: \"photo\",\n    src: $data.photoSrc,\n    alt: \"스크린 샷이 표기됩니다.\"\n  }, null, 8 /* PROPS */, _hoisted_8)])]), _createCommentVNode(\"container끝\"), _hoisted_9]), _createCommentVNode(\"wrap 끝\")]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","width","height","ref","_createElementBlock","_hoisted_1","_createCommentVNode","_hoisted_2","onClick","_cache","args","$options","goHome","_hoisted_3","goBack","_hoisted_4","_hoisted_5","onCanplay","playVideo","autoplay","playsinline","loop","goConfirmMeasurement","_hoisted_6","_hoisted_7","src","$data","photoSrc","alt","_hoisted_8","_hoisted_9"],"sources":["D:\\0610\\1020_KoreaPost\\1.Receipto\\Receiptor\\src\\views\\measurement\\IngMeasurement.vue"],"sourcesContent":["<template>\n    <div>\n        <div class=\"wrap\">\n\n            <!-- ======== 카테고리 헤더 ======== -->\n            <div class=\"header\">\n                <div class=\"main_logo\" v-on:click=\"goHome\"></div>\n                <div class=\"header_title\">\n                    <div class=\"header_title_down\">부피/크기 측정중</div>    \n                </div>\n                <div class=\"back\"  v-on:click=\"goBack\"></div>    \n            </div>\n\n            <!-- ======== 내용 나오는곳 ======== -->\n            <div class=\"ingmeasurement_container\">\n                <div class=\"ingmeasurement_area\" >\n                    <video id=\"video\" width=\"100%\" height=\"100%\" ref=\"camara\"  @canplay=\"playVideo\" autoplay playsinline loop></video>        \n                </div>\n                <div class=\"ingmeasurement_data_area\"  v-on:click=\"goConfirmMeasurement\">\n                    <canvas id=\"canvas\" width=\"100%\" height=\"100%\" ref=\"canvas\"></canvas>\n                </div>\n\n                <div class=\"output\">\n                    <img id=\"photo\" :src=\"photoSrc\" alt=\"스크린 샷이 표기됩니다.\"/>\n                </div>\n              </div><!--container끝-->\n\n            <div class=\"ingmeasurement_btn_area\">\n            </div>\n\n\n\n        </div><!--wrap 끝-->\n\n    </div>\n</template>\n<script>\nimport '@/assets/css/m/ingmeasurement.css';\n//import dayjs from \"dayjs\";\nimport axios from 'axios';\nimport json_log from \"@/assets/json/log.json\";\n\nexport default {\n    name: \"MenuIngMeasurement\",\n    data() {\n        return {\n            video: null,\n            canvas: null,\n            photoSrc: null,\n            streaming: false,\n            height: 0,\n            width: 800        \n        };\n    },\n\n    components: {\n    },\n    methods: {\n        goBack(){\n            this.$router.go(-1);\n        },\n        goHome(){\n            this.$router.push('/');\n        },\n        goReMeasurement(){\n            this.$router.push('/remeasurement');\n        },\n        goConfirmMeasurement(){\n            json_log.box_weight = this.box_weight;\n            json_log.box_size = this.box_size;\n            json_log.box_amt = this.box_amt;\n\n            this.$router.push('/confirmmeasurement');\n        },\n        getMediaStream() {\n            navigator.mediaDevices.getUserMedia({video: true, audio: true}\n                ).then((stream) => {\n                this.video.srcObject = stream;\n                this.video.play();\n                }).catch((err) => {\n                    console.error(`error occurred : ${err}`);\n                })\n        },\n        playVideo() {\n            if (!this.streaming) {\n                this.streaming = true;\n                this.height = this.video.videoHeight / this.video.videoWidth * this.width;\n\n                this.video.height = this.height;\n                this.video.width = this.width;\n                this.canvas.height = this.height;\n                this.canvas.width = this.width;\n            }\n        }, \n        takePhoto() {\n            const context = this.canvas.getContext('2d');\n            context.drawImage(this.video,0,0, this.width, this.height);\n\n            this.photoSrc = this.canvas.toDataURL('image/png');\n        }, \n        clearPhoto() {\n            const context = this.canvas.getContext('2d');\n            context.fillStyle = \"#AAA\";\n            context.fillRect(0, 0, this.width, this.height);\n\n            this.photoSrc = this.canvas.toDataURL('image/png');\n        },\n        async checkCamera(){\n            //카메라 모듈 실행\n            let stream = await navigator.mediaDevices.getUserMedia({ video: true, audio: false });\n            document.querySelector(\"#video\").srcObject = stream;\n        },\n\n        takePickture(){\n            // 스크린샷 이미지를 가져오기 위한 작업\n            let canvas = document.querySelector(\"#canvas\");\n            let video = document.querySelector(\"#video\");\n            canvas.getContext('2d').drawImage(video, 0, 0, canvas.width, canvas.height);\n            let img_url = canvas.toDataURL('image/jpeg');\n        \n            //무게 측정 api 호출 한 후 부피 측정 호출 해야함.\n            // 무게측정 API 호출\n            const apiUrl_weight = 'http://localhost:5193/api/weight';\n            axios({\n                method: 'get',\n                url: apiUrl_weight,\n                timeout : 30000, \n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                data: {}\n            })\n            .then(function(response) {\n                if (response.status === 200) {\n                    const responseWeight = response.data;\n                    console.log(responseWeight);\n                    console.log(\"무게 :\"+responseWeight.weight);\n\n                    // 부피측정 API 호출\n                    /**\n                     * _img_file : base64 카메라 이미지\n                     * _requestFlag : 부피만측정일 경우 => 1 , \n                     *               부피 + OCR : =>2 (OCR : 글자인식)\n                     *  부피 + ocr인식일 경우(requestFlag : 2)는 모든 정보(발송인,수신인,물건 정보)를 같이 파싱을 해야 함.\n                     *  부피만 측정일 경우는 (requestFlag : 1)는 물건 정보만 파싱.\n                     */\n                    const apiUrl_size = 'http://localhost:5193/api/volumeOcr';\n                    var sendData = new FormData();\n                    sendData.append(\"image\", img_url);\n                    sendData.append(\"requestFlag\", \"1\");\n                    axios({\n                        method: 'post',\n                        url: apiUrl_size,\n                        timeout : 30000, \n                        headers: {\n                                \"Content-Type\": \"application/json\"\n                            },\n                        data: sendData\n                    })\n                    .then(function(response) {\n                        if (response.status === 200) {\n                            const responseBody = response.data;\n                            console.log(responseBody);\n                            console.log(\"가로 : \"+responseBody.width+\", 세로 : \"+responseBody.depth+\", 높이 : \"+responseBody.height);\n                            var volumeSum = (responseBody.width)+Number(responseBody.height)+Number(responseBody.depth);\n                            console.log(\"부피 : \"+volumeSum);\n//                            saveKiosk('s_volume',volumeSum.toString());\n//                            saveKiosk('s_width',responseBody.width.toString());\n//                            saveKiosk('s_depth',responseBody.depth.toString());\n//                            saveKiosk('s_height',responseBody.height.toString());\n\n                            /**\n                             * 나주 요금조회 API를 호출 하여 통신 해야 하며\n                             * 통신 결과 성공 할 경우 다음 단계로 가서 결제 페이지로 진행이 되어야함.\n                             */\n                            var getJson = '';\n                        \n                            var sendData2 = new FormData();\n                            sendData2.append(\"prcLargeDivCd\", \"P01\");\n                            sendData2.append(\"prcMidDivCd\", \"02\");\n                            sendData2.append(\"prcSmallDivCd\", \"11\");\n                            sendData2.append(\"prcCalStdWght\", getJson.s_weight);\n                            sendData2.append(\"prcCalStdVolm\", getJson.s_volume);\n                            sendData2.append(\"frnAreaCd\", \"1\");\n\n                            //console.log(JSON.stringify(Object.fromEntries(sendData2)));\n                            //var trans_data = JSON.stringify(Object.fromEntries(sendData2));\n                            axios({\n                                method: 'post',\n                                //url: \"http://testkpl.koreapost.go.kr/autoPost/RetrieveNmPostPrc.jsp\",\n                                url: \"http://118.217.181.132/autoPost/RetrieveNmPostPrc.php\",\n                                timeout : 30000, \n                                headers: {\n                                        \"Content-Type\": \"application/x-www-form-urlencoded\"\n                                }, \n                                    //data:trans_data\n                                data:sendData2\n                            })\n                            .then(function(response) {\n                                if (response.status === 200) {\n                                    const responseBody = response.data;\n                                    console.log(responseBody);\n\n\n                                    let parseXML = new DOMParser();\n                                    let xmlDoc = parseXML.parseFromString(responseBody, \"text/xml\");\n\n                                    let arr = new Array();\n\n                                    let list = xmlDoc.querySelectorAll(\"list\"); \n                                    list.forEach(value => {\n                                        value.childNodes.forEach(value2 => { \t\n                                            if(value2.nodeType === 1){\n                                                arr.push(value2.textContent);\n                                            }\n                                        })\n                                    });\n                                    console.log(arr[0]);\n                                    ///saveKiosk('price',arr[0]);\n      \n                                    this.$router.push('/confirmmeasurement');\n                                } else {\n                                    console.error('error:', response.statusText);\n                                }\n                            })\n                            .catch(function(error) {\n                                console.error('error:', error);\n                            });\n\n                        } else {\n                            console.error('error:', response.statusText);\n                        }\n                    })\n                    .catch(function(error) {\n                        console.error('error:', error);\n                    });\n\n\n                } else {\n                    console.error('error:', response.statusText);\n                }\n            })\n            .catch(function(error) {\n                console.error('error:', error);\n            });\n\n\n            this.$router.push('/ingmeasurement');\n\n        }\n    \n\n    },\n    created() {\n    },\n    mounted() {\n        this.video = this.$refs.video;\n        this.canvas = this.$refs.canvas;\n        this.getMediaStream();\n       // this.clearPhoto();    \n    }\n\n};\n</script>\n<style></style>"],"mappings":";;EAEaA,KAAK,EAAC;AAAM;;EAGRA,KAAK,EAAC;AAAQ;gCAEfC,mBAAA,CAEM;EAFDD,KAAK,EAAC;AAAc,I,aACrBC,mBAAA,CAA8C;EAAzCD,KAAK,EAAC;AAAmB,GAAC,WAAS,E;;EAM3CA,KAAK,EAAC;AAA0B;;EAC5BA,KAAK,EAAC;AAAqB;;EAIpBE,EAAE,EAAC,QAAQ;EAACC,KAAK,EAAC,MAAM;EAACC,MAAM,EAAC,MAAM;EAACC,GAAG,EAAC;;;EAGlDL,KAAK,EAAC;AAAQ;mBAtBnC;gCA2BYC,mBAAA,CACM;EADDD,KAAK,EAAC;AAAyB;;uBA1B5CM,mBAAA,CAiCM,cAhCFL,mBAAA,CA8BM,OA9BNM,UA8BM,GA5BFC,mBAAA,+BAAkC,EAClCP,mBAAA,CAMM,OANNQ,UAMM,GALFR,mBAAA,CAAiD;IAA5CD,KAAK,EAAC,WAAW;IAAMU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,MAAA,IAAAD,QAAA,CAAAC,MAAA,IAAAF,IAAA,CAAM;MACzCG,UAEM,EACNd,mBAAA,CAA6C;IAAxCD,KAAK,EAAC,MAAM;IAAOU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAG,MAAA,IAAAH,QAAA,CAAAG,MAAA,IAAAJ,IAAA,CAAM;QAGzCJ,mBAAA,+BAAkC,EAClCP,mBAAA,CAWQ,OAXRgB,UAWQ,GAVJhB,mBAAA,CAEM,OAFNiB,UAEM,GADFjB,mBAAA,CAAkH;IAA3GC,EAAE,EAAC,OAAO;IAACC,KAAK,EAAC,MAAM;IAACC,MAAM,EAAC,MAAM;IAACC,GAAG,EAAC,QAAQ;IAAGc,SAAO,EAAAR,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAO,SAAA,IAAAP,QAAA,CAAAO,SAAA,IAAAR,IAAA,CAAS;IAAES,QAAQ,EAAR,EAAQ;IAACC,WAAW,EAAX,EAAW;IAACC,IAAI,EAAJ;oDAEzGtB,mBAAA,CAEM;IAFDD,KAAK,EAAC,0BAA0B;IAAOU,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAW,oBAAA,IAAAX,QAAA,CAAAW,oBAAA,IAAAZ,IAAA,CAAoB;MACnEX,mBAAA,CAAqE,UAArEwB,UAAqE,8B,GAGzExB,mBAAA,CAEM,OAFNyB,UAEM,GADFzB,mBAAA,CAAqD;IAAhDC,EAAE,EAAC,OAAO;IAAEyB,GAAG,EAAEC,KAAA,CAAAC,QAAQ;IAAEC,GAAG,EAAC;0BAvBxDC,UAAA,E,KAyBoBvB,mBAAA,cAAiB,EAEzBwB,UACM,C,GAIJxB,mBAAA,UAAa,C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}